import { homedir } from 'node:os';
import path from 'node:path';

var author = "JourneyApps";
var bin = {
	powersync: "./bin/run.js"
};
var publishConfig = {
	registry: "https://registry.npmjs.org/",
	access: "public"
};
var description = "PowerSync CLI";
var engines = {
	node: ">=20.0.0"
};
var files = [
	"/bin",
	"/dist",
	"/oclif.manifest.json"
];
var version = "0.6.1";
var bugs = "https://github.com/powersync-ja/cli/issues";
var types = "dist/index.d.ts";
var exports = "./lib/index.js";
var type = "module";
var homepage = "https://github.com/powersync-ja/cli";
var license = "UNLICENSED";
var name = "powersync";
var oclif = {
	bin: "powersync",
	dirname: "powersync",
	commands: "./dist/commands",
	plugins: [
		"@oclif/plugin-help",
		"@oclif/plugin-not-found",
		"@oclif/plugin-warn-if-update-available"
	],
	topics: {
		"instance:sync-rules": {
			description: "run \"powersync instance sync-rules\" to see a list of subcommands"
		},
		instance: {
			description: "run \"powersync instance\" to see a list of subcommands"
		}
	},
	topicSeparator: " "
};
var repository = "powersync-ja/cli";
var scripts = {
	build: "pnpm build:oclif-commands && pnpm bundle:powersync-deps && ./combine-bundle-and-build.sh && pnpm readme",
	"build:oclif-commands": "shx rm -rf dist && tsc -b",
	"bundle:powersync-deps": "shx rm -rf lib && rollup -c rollup.config.mjs",
	lint: "eslint . --ext .ts",
	postpack: "shx rm -f oclif.manifest.json",
	posttest: "pnpm run lint",
	prepack: "pnpm run build && oclif manifest && oclif readme",
	readme: "oclif readme && ./update-readme.sh",
	prepare: "pnpm run build",
	test: "vitest",
	release: "pnpm build && pnpm changeset publish",
	prettier: "prettier --write \"**/*.ts\"",
	version: "pnpm run readme && git add README.md",
	"pack:tarballs": "oclif pack tarballs --parallel",
	"changeset:version": "pnpm changeset version && pnpm readme"
};
var dependencies = {
	"@oclif/core": "^3.27.0",
	"@oclif/plugin-help": "^6.2.8",
	"@oclif/plugin-not-found": "^3.1.4",
	"@oclif/plugin-warn-if-update-available": "^3.1.11",
	"@rollup/plugin-typescript": "^11.1.6",
	clipboardy: "^4.0.0",
	dotenv: "^16.4.5",
	inquirer: "^9.3.6",
	ora: "^8.0.1"
};
var devDependencies = {
	"@changesets/cli": "^2.27.7",
	"@journeyapps-platform/powersync-types": "^0.22.0",
	"@journeyapps-platform/sdk-accounts-hub": "^7.0.1",
	"@journeyapps-platform/sdk-common": "^5.5.0",
	"@journeyapps-platform/sdk-powersync": "^0.22.1",
	"@journeyapps-platform/types-accounts-hub": "^7.0.1",
	"@powersync/service-sync-rules": "^0.18.2",
	"@rollup/plugin-commonjs": "^26.0.1",
	"@rollup/plugin-json": "^6.1.0",
	"@rollup/plugin-node-resolve": "^15.2.3",
	"@types/inquirer": "^9.0.7",
	"@types/node": "^20.16.1",
	esbuild: "^0.23.1",
	eslint: "^8.57.0",
	"eslint-config-oclif": "^5",
	"eslint-config-oclif-typescript": "^3.1.9",
	"eslint-config-prettier": "^9.1.0",
	"eslint-plugin-prettier": "^5.2.1",
	glob: "^11.0.0",
	oclif: "^4.14.29",
	prettier: "^3.3.3",
	rollup: "^4.21.2",
	"rollup-plugin-esbuild": "^6.1.1",
	shx: "^0.3.4",
	"strip-ansi": "^7.1.0",
	"ts-node": "^10.9.2",
	typescript: "^5.5.4",
	vitest: "^2.0.5"
};
var packageJSON = {
	author: author,
	bin: bin,
	publishConfig: publishConfig,
	description: description,
	engines: engines,
	files: files,
	version: version,
	bugs: bugs,
	types: types,
	exports: exports,
	type: type,
	homepage: homepage,
	license: license,
	name: name,
	oclif: oclif,
	repository: repository,
	scripts: scripts,
	dependencies: dependencies,
	devDependencies: devDependencies
};

const APP_NAME = "POWERSYNC_CLI";
path.join(homedir(), "/.powersync");

const generateHeader = (bearerToken) => {
  return {
    Accept: "application/json",
    Authorization: `Bearer ${bearerToken}`,
    ContentType: "application/json",
    "user-agent": `${APP_NAME}/${packageJSON.version}`
  };
};
const checkProjectId = (projectId) => {
  if (!projectId)
    throw new Error("No project id found");
};
const checkOrgId = (orgId) => {
  if (!orgId)
    throw new Error("No org id found");
};
const checkInstanceId = (instanceId) => {
  if (!instanceId)
    throw new Error("No instance id found");
};

export { checkInstanceId, checkOrgId, checkProjectId, generateHeader };
