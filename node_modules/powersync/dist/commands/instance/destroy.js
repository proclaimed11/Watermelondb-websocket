import { Command, Flags, ux } from '@oclif/core';
import inquirer from 'inquirer';
import ora from 'ora';
import * as PowerSyncClient from '../../service/powersync.client.js';
import { bold, checkThatEnvVariablesAreSet, green, red } from '../../utils.js';
export default class InstanceDestroy extends Command {
    static description = 'Destroy the current instance - THIS CANNOT BE UNDONE.';
    static examples = ['<%= config.bin %> <%= command.id %>'];
    static flags = {
        skipConfirmation: Flags.boolean({ char: 's', description: 'Ignore confirmation question.' })
    };
    async run() {
        checkThatEnvVariablesAreSet(this.config.bin, true);
        const { flags } = await this.parse(InstanceDestroy);
        const config = await PowerSyncClient.getInstanceConfig();
        const questions = [
            {
                message: `Please type ${red(config.name)} to confirm you want to destroy this instance.\n`,
                name: 'areYouSure',
                type: 'input',
                validate(input) {
                    if (input !== config.name) {
                        return `Please type ${red(config.name)} to confirm you want to destroy this instance.\n`;
                    }
                    return true;
                },
                when: !flags.skipConfirmation
            }
        ];
        await inquirer.prompt(questions);
        const spinner = ora({
            prefixText: 'Destroying instance\n',
            spinner: 'moon',
            suffixText: '\nThis may take a few minutes'
        });
        spinner.start();
        const instance = await PowerSyncClient.destroyInstance();
        let status = 'pending';
        status = await PowerSyncClient.waitForStatusChange(instance.id);
        spinner.stop();
        if (status === 'failed') {
            ux.error(red(`There was an error destroying the instance. Please try again.`), { exit: 1 });
        }
        ux.log(green(`Instance with id ${bold(instance.id)} has been destroyed.`));
    }
}
