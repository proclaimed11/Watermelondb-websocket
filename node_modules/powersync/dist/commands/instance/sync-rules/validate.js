import { Command, Flags, ux } from '@oclif/core';
import fs from 'node:fs';
import * as PowerSyncClient from '../../../service/powersync.client.js';
import { checkThatEnvVariablesAreSet, green, red } from '../../../utils.js';
export default class SyncRulesValidate extends Command {
    static description = 'Validate sync rules from a local sync rules config file.';
    static examples = [
        '<%= config.bin %> <%= command.id %>',
        '<%= config.bin %> <%= command.id %> --filePath path/to/file',
        '<%= config.bin %> <%= command.id %> -f path/to/file'
    ];
    static flags = {
        filePath: Flags.string({ char: 'f', description: 'Path to the sync rules config file.', required: true })
    };
    async run() {
        checkThatEnvVariablesAreSet(this.config.bin, true);
        const { flags } = await this.parse(SyncRulesValidate);
        const syncRules = fs.readFileSync(flags.filePath, 'utf8');
        const validation = await PowerSyncClient.validateSyncRules(syncRules);
        if (validation.errors.length > 0) {
            ux.log(red(`❌ errors found:`));
            for (const error of validation.errors) {
                ux.log(red(error.message));
            }
            return ux.exit(1);
        }
        ux.log(green('✅ Sync rules are valid'));
    }
}
