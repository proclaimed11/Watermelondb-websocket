// eslint-disable-next-line @typescript-eslint/no-explicit-any
export const generateCommonDeployQuestions = (flags) => [
    {
        message: 'What is your database hostname?',
        name: 'hostname',
        type: 'input',
        validate(value) {
            return value.length > 0 ? true : 'Please enter your hostname.';
        },
        when: !flags.hostname
    },
    {
        default: 5432,
        message: 'What is the port number of your database?',
        name: 'port',
        type: 'input',
        validate(value) {
            const number = Number.parseFloat(value);
            if (Number.isNaN(number)) {
                return 'Please enter a valid port number.';
            }
            return String(value).length > 0 ? true : 'Please enter your port number.';
        },
        when: !flags.port
    },
    {
        default: 'postgres',
        message: 'What is your database name?',
        name: 'databaseName',
        type: 'input',
        validate(value) {
            return value.length > 0 ? true : 'Please enter your database name.';
        },
        when: !flags.databaseName
    },
    {
        default: 'postgres',
        message: 'What is your database username?',
        name: 'databaseUsername',
        type: 'input',
        validate(value) {
            return value.length > 0 ? true : 'Please enter your database username.';
        },
        when: !flags.databaseUsername
    },
    {
        message: 'What is your database password?',
        name: 'databasePassword',
        type: 'password',
        validate(value) {
            return value.length > 0 ? true : 'Please enter your password.';
        },
        when: !flags.databasePassword
    },
    {
        default: false,
        message: 'Are you using Supabase auth?',
        name: 'useSupabaseAuth',
        type: 'confirm',
        // eslint-disable-next-line eqeqeq,no-eq-null
        when: flags.useSupabaseAuth == null && !flags.jwksUri
    },
    {
        message: 'Enter your JWKS URI (must include https://)?',
        name: 'jwksUri',
        type: 'input',
        validate(value) {
            const urlRegex = /^(https?|ftp):\/\/[^\s#$./?].\S*$/i;
            return urlRegex.test(value) ? true : 'Please enter a valid URL.';
        },
        when: (answers) => !flags.jwksUri && !answers.useSupabaseAuth
    },
    {
        default: false,
        message: 'Do you want to add audiences?',
        name: 'useAudiences',
        type: 'confirm',
        when: !flags.jwksUri
    },
    {
        message: 'Enter your JWT Audiences? (comma separated)',
        name: 'jwksAudiences',
        type: 'input',
        when: (answers) => answers.useAudiences
    }
];
