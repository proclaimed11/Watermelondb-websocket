{
  "commands": {
    "init": {
      "aliases": [],
      "args": {},
      "description": "Initialize the CLI.",
      "examples": [
        "<%= config.bin %> <%= command.id %>"
      ],
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "init",
      "pluginAlias": "powersync",
      "pluginName": "powersync",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "init.js"
      ]
    },
    "instances": {
      "aliases": [],
      "args": {},
      "description": "View list of instances.",
      "examples": [
        "<%= config.bin %> <%= command.id %>"
      ],
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "instances",
      "pluginAlias": "powersync",
      "pluginName": "powersync",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "instances.js"
      ]
    },
    "instance:config": {
      "aliases": [],
      "args": {},
      "description": "Display the instance config.",
      "examples": [
        "<%= config.bin %> <%= command.id %>"
      ],
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "instance:config",
      "pluginAlias": "powersync",
      "pluginName": "powersync",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "instance",
        "config.js"
      ]
    },
    "instance:create": {
      "aliases": [],
      "args": {},
      "description": "Create a new instance.",
      "examples": [
        "<%= config.bin %> <%= command.id %>"
      ],
      "flags": {
        "databaseName": {
          "char": "n",
          "description": "Name of the database.",
          "name": "databaseName",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "databasePassword": {
          "char": "p",
          "description": "Password of the database.",
          "hidden": true,
          "name": "databasePassword",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "databaseUsername": {
          "char": "u",
          "description": "Username of the database.",
          "hidden": true,
          "name": "databaseUsername",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "hostname": {
          "char": "h",
          "description": "Hostname to connect to database.",
          "name": "hostname",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "jwksUri": {
          "char": "w",
          "description": "JWKS URI (must include https://).",
          "name": "jwksUri",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "jwtAudiences": {
          "char": "a",
          "description": "JWT audiences (comma separated).",
          "name": "jwtAudiences",
          "default": "",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "char": "i",
          "description": "Name of the instance.",
          "name": "name",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "port": {
          "char": "o",
          "description": "Port number to connect to database.",
          "name": "port",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "region": {
          "char": "r",
          "description": "Region to deploy instance to.",
          "name": "region",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "skipInteraction": {
          "char": "s",
          "description": "Skip interactivity.",
          "name": "skipInteraction",
          "allowNo": false,
          "type": "boolean"
        },
        "useSupabaseAuth": {
          "char": "b",
          "description": "Use Supabase auth.",
          "name": "useSupabaseAuth",
          "allowNo": true,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "instance:create",
      "pluginAlias": "powersync",
      "pluginName": "powersync",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "instance",
        "create.js"
      ]
    },
    "instance:deploy": {
      "aliases": [],
      "args": {},
      "description": "Deploy changes to an existing instance.",
      "examples": [
        "<%= config.bin %> <%= command.id %>"
      ],
      "flags": {
        "databaseName": {
          "char": "n",
          "description": "Name of the database.",
          "name": "databaseName",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "databasePassword": {
          "char": "p",
          "description": "Password of the database.",
          "hidden": true,
          "name": "databasePassword",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "databaseUsername": {
          "char": "u",
          "description": "Username of the database.",
          "hidden": true,
          "name": "databaseUsername",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "hostname": {
          "char": "h",
          "description": "Hostname to connect to database.",
          "name": "hostname",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "jwksUri": {
          "char": "w",
          "description": "JWKS URI (must include https://).",
          "name": "jwksUri",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "jwtAudiences": {
          "char": "a",
          "description": "JWT audiences (comma separated).",
          "name": "jwtAudiences",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "port": {
          "char": "o",
          "description": "Port number to connect to database.",
          "name": "port",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "skipInteraction": {
          "char": "s",
          "description": "Skip interactivity.",
          "name": "skipInteraction",
          "allowNo": false,
          "type": "boolean"
        },
        "useSupabaseAuth": {
          "char": "b",
          "description": "Use Supabase auth.",
          "name": "useSupabaseAuth",
          "allowNo": true,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "instance:deploy",
      "pluginAlias": "powersync",
      "pluginName": "powersync",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "instance",
        "deploy.js"
      ]
    },
    "instance:destroy": {
      "aliases": [],
      "args": {},
      "description": "Destroy the current instance - THIS CANNOT BE UNDONE.",
      "examples": [
        "<%= config.bin %> <%= command.id %>"
      ],
      "flags": {
        "skipConfirmation": {
          "char": "s",
          "description": "Ignore confirmation question.",
          "name": "skipConfirmation",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "instance:destroy",
      "pluginAlias": "powersync",
      "pluginName": "powersync",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "instance",
        "destroy.js"
      ]
    },
    "instance:generate-dev-token": {
      "aliases": [],
      "args": {},
      "description": "Generate a developer token using the Token subject/ User ID.",
      "examples": [
        "<%= config.bin %> <%= command.id %>"
      ],
      "flags": {
        "expiresInSeconds": {
          "char": "e",
          "description": "The token expiry in seconds.",
          "name": "expiresInSeconds",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "userId": {
          "char": "u",
          "description": "The Token subject/User ID for the developer token",
          "name": "userId",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "instance:generate-dev-token",
      "pluginAlias": "powersync",
      "pluginName": "powersync",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "instance",
        "generate-dev-token.js"
      ]
    },
    "instance:schema": {
      "aliases": [],
      "args": {},
      "description": "View the schema of the current instance.",
      "examples": [
        "<%= config.bin %> <%= command.id %>"
      ],
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "instance:schema",
      "pluginAlias": "powersync",
      "pluginName": "powersync",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "instance",
        "schema.js"
      ]
    },
    "instance:set": {
      "aliases": [],
      "args": {},
      "description": "Set the current instance.",
      "examples": [
        "<%= config.bin %> <%= command.id %>",
        "<%= config.bin %> <%= command.id %> --instanceId=1234"
      ],
      "flags": {
        "instanceId": {
          "char": "i",
          "description": "Instance ID to change to.",
          "name": "instanceId",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "instance:set",
      "pluginAlias": "powersync",
      "pluginName": "powersync",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "instance",
        "set.js"
      ]
    },
    "instance:status": {
      "aliases": [],
      "args": {},
      "description": "View the status of the current instance. View the status of a different instance by using flags.",
      "examples": [
        "<%= config.bin %> <%= command.id %>",
        "<%= config.bin %> <%= command.id %> --orgId=1234 --projectId=1234 --instanceId=1234 --authToken=1234"
      ],
      "flags": {
        "authToken": {
          "char": "t",
          "description": "Override current auth token.",
          "name": "authToken",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "instanceId": {
          "char": "i",
          "description": "Override current instance by providing the ID of a different instance.",
          "name": "instanceId",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "orgId": {
          "char": "o",
          "description": "Override current organization by providing the ID of a different organization.",
          "name": "orgId",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "projectId": {
          "char": "p",
          "description": "Override current project by providing the ID of a different project.",
          "name": "projectId",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "instance:status",
      "pluginAlias": "powersync",
      "pluginName": "powersync",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "instance",
        "status.js"
      ]
    },
    "instance:stop": {
      "aliases": [],
      "args": {},
      "description": "Stop the current instance.",
      "examples": [
        "<%= config.bin %> <%= command.id %>"
      ],
      "flags": {
        "skipConfirmation": {
          "char": "s",
          "description": "Ignore confirmation question.",
          "name": "skipConfirmation",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "instance:stop",
      "pluginAlias": "powersync",
      "pluginName": "powersync",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "instance",
        "stop.js"
      ]
    },
    "instance:sync-rules:deploy": {
      "aliases": [],
      "args": {},
      "description": "Deploy sync rules from a local sync rules config file to the current instance.",
      "examples": [
        "<%= config.bin %> <%= command.id %>",
        "<%= config.bin %> <%= command.id %> --filePath path/to/file",
        "<%= config.bin %> <%= command.id %> -f path/to/file"
      ],
      "flags": {
        "filePath": {
          "char": "f",
          "description": "Path to the sync rules config file.",
          "name": "filePath",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "skipConfirmation": {
          "char": "s",
          "description": "Ignore confirmation question.",
          "name": "skipConfirmation",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "instance:sync-rules:deploy",
      "pluginAlias": "powersync",
      "pluginName": "powersync",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "instance",
        "sync-rules",
        "deploy.js"
      ]
    },
    "instance:sync-rules:generate-schema": {
      "aliases": [],
      "args": {},
      "description": "Generate schema in your language from your sync rules config file.",
      "examples": [
        "<%= config.bin %> <%= command.id %>",
        "<%= config.bin %> <%= command.id %> --filePath path/to/file",
        "<%= config.bin %> <%= command.id %> -f path/to/file"
      ],
      "flags": {
        "filePath": {
          "char": "f",
          "description": "Path to the sync rules config file.",
          "name": "filePath",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "language": {
          "char": "l",
          "description": "Choose language for output.",
          "name": "language",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "js",
            "dart"
          ],
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "instance:sync-rules:generate-schema",
      "pluginAlias": "powersync",
      "pluginName": "powersync",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "instance",
        "sync-rules",
        "generate-schema.js"
      ]
    },
    "instance:sync-rules:validate": {
      "aliases": [],
      "args": {},
      "description": "Validate sync rules from a local sync rules config file.",
      "examples": [
        "<%= config.bin %> <%= command.id %>",
        "<%= config.bin %> <%= command.id %> --filePath path/to/file",
        "<%= config.bin %> <%= command.id %> -f path/to/file"
      ],
      "flags": {
        "filePath": {
          "char": "f",
          "description": "Path to the sync rules config file.",
          "name": "filePath",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "instance:sync-rules:validate",
      "pluginAlias": "powersync",
      "pluginName": "powersync",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "instance",
        "sync-rules",
        "validate.js"
      ]
    }
  },
  "version": "0.6.1"
}